/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { RigidBody } from "@react-three/rapier";

type GLTFResult = GLTF & {
  nodes: {
    ["Node-Mesh"]: THREE.Mesh;
    ["Node-Mesh_1"]: THREE.Mesh;
    ["Node-Mesh_2"]: THREE.Mesh;
    ["Node-Mesh_3"]: THREE.Mesh;
    ["Node-Mesh_4"]: THREE.Mesh;
    ["Node-Mesh_5"]: THREE.Mesh;
    ["Node-Mesh_6"]: THREE.Mesh;
    ["Node-Mesh_7"]: THREE.Mesh;
    ["Node-Mesh_8"]: THREE.Mesh;
    ["Node-Mesh_9"]: THREE.Mesh;
  };
  materials: {
    mat10: THREE.MeshStandardMaterial;
    mat20: THREE.MeshStandardMaterial;
    mat22: THREE.MeshStandardMaterial;
    mat4: THREE.MeshStandardMaterial;
    mat9: THREE.MeshStandardMaterial;
    mat12: THREE.MeshStandardMaterial;
    mat8: THREE.MeshStandardMaterial;
    mat21: THREE.MeshStandardMaterial;
    mat7: THREE.MeshStandardMaterial;
    mat3: THREE.MeshStandardMaterial;
  };
};

export function Nature(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/nature.glb") as GLTFResult;
  return (
    <RigidBody type="fixed" colliders="trimesh">
      <group {...props} dispose={null}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Node-Mesh"].geometry}
          material={materials.mat10}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Node-Mesh_1"].geometry}
          material={materials.mat20}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Node-Mesh_2"].geometry}
          material={materials.mat22}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Node-Mesh_3"].geometry}
          material={materials.mat4}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Node-Mesh_4"].geometry}
          material={materials.mat9}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Node-Mesh_5"].geometry}
          material={materials.mat12}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Node-Mesh_6"].geometry}
          material={materials.mat8}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Node-Mesh_7"].geometry}
          material={materials.mat21}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Node-Mesh_8"].geometry}
          material={materials.mat7}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes["Node-Mesh_9"].geometry}
          material={materials.mat3}
        />
      </group>
    </RigidBody>
  );
}

useGLTF.preload("/nature.glb");
